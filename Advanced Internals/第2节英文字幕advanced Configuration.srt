WEBVTT

0
00:00:00.490 --> 00:00:03.270
Hi I'm Jon Galloway and I'm Jeff Fritz.

1
00:00:03.330 --> 00:00:06.390
So we're digging into ASP.NET Core

2
00:00:06.450 --> 00:00:09.733
and you're going to be showing us ASP.NET Core configuration.

3
00:00:09.810 --> 00:00:10.920
Yeah, what are the

4
00:00:10.980 --> 00:00:12.929
different ways that I can configure my

5
00:00:12.980 --> 00:00:14.910
application, there's so much that I want

6
00:00:14.970 --> 00:00:16.800
to be able to control about how it

7
00:00:16.860 --> 00:00:19.020
starts, how it runs and I want to be able

8
00:00:19.080 --> 00:00:21.060
to access those configuration settings

9
00:00:21.120 --> 00:00:23.000
from different places
in my application.

10
00:00:23.060 --> 00:00:26.466
What are my options there?
What can I do with it? all right.

11
00:00:26.590 --> 00:00:27.530
So let's take a look

12
00:00:27.590 --> 00:00:30.750
here on on my machine, I've got a couple of things already configured I've started with a sample application that it was a ASP.NET application using razor pages

13
00:00:30.810 --> 00:00:33.420
of things already configured I've started with a sample application that it was a ASP.NET application using razor pages

14
00:00:33.480 --> 00:00:35.899
started with a sample application that it was a ASP.NET application using razor pages

15
00:00:35.950 --> 00:00:42.066


16
00:00:42.190 --> 00:00:44.730
and I've got a couple of things written out here that I want to show you,

17
00:00:44.790 --> 00:00:46.649
written out here that I want to show you,

18
00:00:46.700 --> 00:00:49.739
first-off is if I want to actually grab 

19
00:00:49.790 --> 00:00:51.570
MyConfiguration and have that strongly

20
00:00:51.630 --> 00:00:54.620
typed configuration class, I can write a

21
00:00:54.680 --> 00:00:58.280
class a normal class it's a plain old

22
00:00:58.340 --> 00:01:01.590
CLR class here and I'm going to provide two

23
00:01:01.650 --> 00:01:04.088
properties inside of this
configuration class.

24
00:01:04.210 --> 00:01:05.900
I'm going to specify my menu bar

25
00:01:05.960 --> 00:01:08.700
background color and then like the text

26
00:01:08.760 --> 00:01:10.619
color that I want to set for my menu bar

27
00:01:10.670 --> 00:01:13.890
in my application. Okay, so this class

28
00:01:13.950 --> 00:01:16.560
it's pretty simple it's using default

29
00:01:16.620 --> 00:01:19.290
property values so that I can set that I

30
00:01:19.350 --> 00:01:21.210
want a black background with white text

31
00:01:21.270 --> 00:01:24.390
and inside of my startup class I can

32
00:01:24.450 --> 00:01:26.970
configure that, based on the

33
00:01:27.030 --> 00:01:29.340
configuration that's available in my

34
00:01:29.400 --> 00:01:33.222
application by using this
services.configure method

35
00:01:33.370 --> 00:01:37.170
inside of my configure services method.
I'm going to configure a MyConfiguration 
36
00:01:37.230 --> 00:01:40.680
MyConfiguration class using the section

37
00:01:40.740 --> 00:01:43.170
from MyConfiguration
that's labeled from My-

38
00:01:43.230 --> 00:01:45.170
configuration collection called

39
00:01:46.230 --> 00:01:50.640
MyConfiguration. So right now inside of

40
00:01:50.700 --> 00:01:53.369
my appsettings.JSON I don't have a my

41
00:01:53.420 --> 00:01:56.939
configuration section, so when I run this

42
00:01:56.990 --> 00:02:00.420
application right now
with these settings,

43
00:02:00.480 --> 00:02:08.789
let me just dotnet run that and I will

44
00:02:08.840 --> 00:02:13.950
copy this location and go
over to my browser,

45
00:02:14.010 --> 00:02:16.230
I will go over to Firefox here and let's

46
00:02:16.290 --> 00:02:20.190
paste that in and you'll see that I get

47
00:02:20.250 --> 00:02:22.560
a Configuration
Sample information this

48
00:02:22.620 --> 00:02:24.480
is the stuff that I wrote into the

49
00:02:24.540 --> 00:02:26.940
middle of my page, my header is black

50
00:02:27.000 --> 00:02:29.160
I've got some information being dumped

51
00:02:29.220 --> 00:02:31.920
out on the footer. Now let's take a look

52
00:02:31.980 --> 00:02:33.630
at how I'm getting MyConfiguration

53
00:02:33.690 --> 00:02:36.120
information into this page, let me go

54
00:02:36.180 --> 00:02:39.090
back to my code I'll go over to the

55
00:02:39.150 --> 00:02:43.190
pages and I want to show you the layout.

56
00:02:43.250 --> 00:02:47.220
Now the layout I'm injecting the

57
00:02:47.280 --> 00:02:49.680
configuration object and I'm also going

58
00:02:49.740 --> 00:02:52.739
to inject MyConfiguration options,

59
00:02:52.790 --> 00:02:54.959
so that MyConfiguration
class is actually

60
00:02:55.010 --> 00:02:58.590
being wrapped by an IOptions object

61
00:02:58.650 --> 00:03:01.410
and I can get back my
configuration class

62
00:03:01.470 --> 00:03:03.569
fully populated with whatever

63
00:03:03.620 --> 00:03:05.888
configuration and information it read,

64
00:03:06.080 --> 00:03:09.822
by accessing MyConfigOptions.value

65
00:03:09.940 --> 00:03:12.900
And then to make this demo a little bit

66
00:03:12.960 --> 00:03:14.489
interesting so that you can see how

67
00:03:14.540 --> 00:03:17.099
we're using configuration inside of code

68
00:03:17.150 --> 00:03:19.769
I'm just echoing the menu background

69
00:03:19.820 --> 00:03:22.889
color for my nav bar color and I'm

70
00:03:22.940 --> 00:03:25.139
echoing the text color and making both

71
00:03:25.190 --> 00:03:28.260
of those items important in my CSS here

72
00:03:28.320 --> 00:03:30.989
inside of my layout. Now this could be a

73
00:03:31.040 --> 00:03:33.000
connection string for
your application,

74
00:03:33.060 --> 00:03:36.780
this could be client ID access

75
00:03:36.840 --> 00:03:38.579
information to access a third-party

76
00:03:38.630 --> 00:03:40.530
provider, maybe it's something like a

77
00:03:40.590 --> 00:03:43.350
SendGrid or Twitter, those things can be

78
00:03:43.410 --> 00:03:44.819
configured in your configuration

79
00:03:44.870 --> 00:03:47.519
and used elsewhere in your code by

80
00:03:47.570 --> 00:03:50.933
putting them into a
strongly typed class like this.

81
00:03:51.030 --> 00:03:52.620
The last thing that I want to

82
00:03:52.680 --> 00:03:54.569
show is the environment variables are

83
00:03:54.620 --> 00:03:57.079
being loaded up from my application

84
00:03:57.130 --> 00:04:01.590
and by default, things like the windows

85
00:04:01.650 --> 00:04:03.599
computer name environment variable is

86
00:04:03.650 --> 00:04:06.510
being added to MyConfiguration and I

87
00:04:06.570 --> 00:04:08.430
can see that here in the footer

88
00:04:08.490 --> 00:04:11.400
JEFFS-YOGA that's the name of my machine,

89
00:04:11.520 --> 00:04:13.820
I'm accessing that by using this

90
00:04:13.880 --> 00:04:16.590
indexer to grab that
configuration piece

91
00:04:16.650 --> 00:04:18.933
of information and write it
out to the page.

92
00:04:19.140 --> 00:04:21.980
But now let's let's start changing

93
00:04:22.040 --> 00:04:24.270
things up a little bit, we know that we

94
00:04:24.330 --> 00:04:27.360
read from app settings,
so let's write a section into

95
00:04:27.420 --> 00:04:33.330
app settings for MyConfiguration this

96
00:04:33.390 --> 00:04:37.259
is JSON, so I will add a JSON group here

97
00:04:37.310 --> 00:04:40.949
and we will have MenubarBgcolor

98
00:04:41.000 --> 00:04:43.979
and we will specify, let's start I want to

99
00:04:44.030 --> 00:04:47.099
make the background green and then my

100
00:04:47.150 --> 00:04:53.044
MenubarColor the text color,
let's make it black.

101
00:04:53.190 --> 00:04:58.379
Alright, make sure I put that
comma in there. So now I have properly

102
00:04:58.430 --> 00:05:01.379
formatted app settings,
I'll go over here

103
00:05:01.430 --> 00:05:04.409
and I will restart my application so

104
00:05:04.460 --> 00:05:06.629
that we load up that new configuration

105
00:05:06.680 --> 00:05:13.319
and I'll refresh my page and of course

106
00:05:13.370 --> 00:05:16.050
my header turns green with black text

107
00:05:16.110 --> 00:05:17.789
because now I'm reading settings from

108
00:05:17.840 --> 00:05:21.000
appsettings.JSON .But we actually have

109
00:05:21.060 --> 00:05:23.969
configuration by default inside of our

110
00:05:24.020 --> 00:05:26.219
ASP.NET Core application
that will read-in

111
00:05:26.270 --> 00:05:29.250
appsettings.environmentname.JSON

112
00:05:29.310 --> 00:05:31.949
and we can override whatever's

113
00:05:32.000 --> 00:05:34.469
inside of appsettings, this is the next

114
00:05:34.520 --> 00:05:36.377
step in our configuration hierarchy.

115
00:05:36.430 --> 00:05:38.310
So that's really useful because I can say

116
00:05:38.370 --> 00:05:40.199
like this is my main app settings that

117
00:05:40.250 --> 00:05:42.089
I'm going to be deploying to my server

118
00:05:42.140 --> 00:05:43.650
but when I'm in development I want to

119
00:05:43.710 --> 00:05:45.990
override some of those settings not all

120
00:05:46.050 --> 00:05:47.430
of them but maybe just a few of them.

121
00:05:47.490 --> 00:05:50.219
Maybe just a few, so I'm going to copy out

122
00:05:50.270 --> 00:05:52.710
this MyConfiguration section go over

123
00:05:52.770 --> 00:05:55.020
into my appsettings.Development.json

124
00:05:55.080 --> 00:05:58.650
file this is the default file that we

125
00:05:58.710 --> 00:05:59.909
provide for you when you're building

126
00:05:59.960 --> 00:06:02.849
inside of Visual Studio and I'm going to

127
00:06:02.900 --> 00:06:06.666
change my menu
background color to purple

128
00:06:06.790 --> 00:06:09.410
and let's make this light gray so

129
00:06:09.470 --> 00:06:17.810
that we can still read,
let me restart my application.

130
00:06:17.870 --> 00:06:20.810
And I'll browse to my application now,

131
00:06:20.870 --> 00:06:24.377
and now I get the purple background,

132
00:06:24.540 --> 00:06:27.500
so the configuration for the green with

133
00:06:27.560 --> 00:06:30.860
black text is still there but this one

134
00:06:30.920 --> 00:06:33.620
is loaded second, so this one will

135
00:06:33.680 --> 00:06:38.000
overlay that other configuration. Now I

136
00:06:38.060 --> 00:06:40.730
mentioned things like
Twitter passwords

137
00:06:40.790 --> 00:06:42.320
or connection strings that might be

138
00:06:42.380 --> 00:06:44.480
important to you 
we know and we talked a

139
00:06:44.540 --> 00:06:47.177
little bit about putting
those into user secrets,

140
00:06:47.300 --> 00:06:49.730
user secrets are a configuration

141
00:06:49.790 --> 00:06:52.370
option that's loaded next and it should

142
00:06:52.430 --> 00:06:55.400
live in a file that's
outside of our project.

143
00:06:55.570 --> 00:06:56.750
So I'm going to right click on

144
00:06:56.810 --> 00:06:58.820
my project here in Visual Studio and I'm

145
00:06:58.880 --> 00:07:01.580
going to choose Manage User Secrets and I

146
00:07:01.640 --> 00:07:04.800
get an empty .json
file called secrets.json

147
00:07:05.030 --> 00:07:07.400
I'm going to paste in my

148
00:07:07.460 --> 00:07:09.680
configuration here let's change this up

149
00:07:09.740 --> 00:07:11.600
a little bit, this is my secure

150
00:07:11.660 --> 00:07:13.280
information so I will make the

151
00:07:13.340 --> 00:07:16.688
background color red and the
menu bar color white.

152
00:07:16.830 --> 00:07:17.960
I still have my other

153
00:07:18.020 --> 00:07:20.210
configuration settings out there but

154
00:07:20.270 --> 00:07:23.210
I've added user secrets, these will be

155
00:07:23.270 --> 00:07:25.580
loaded if there are user secrets present

156
00:07:25.640 --> 00:07:28.880
and we're in development mode. So now

157
00:07:28.940 --> 00:07:31.130
I'll go back to my page and I'll refresh

158
00:07:31.190 --> 00:07:35.270
and now I get the red with white text,

159
00:07:35.330 --> 00:07:36.890
so I've got three
different configurations

160
00:07:36.950 --> 00:07:39.020
coming in and this is the order in which

161
00:07:39.080 --> 00:07:42.250
they're overriding each other

162
00:07:42.310 --> 00:07:45.380
and changing MyConfiguration.
Okay, so the

163
00:07:45.440 --> 00:07:46.610
difference just to make sure I got it

164
00:07:46.670 --> 00:07:51.740
the difference between the
appsettings.Development

165
00:07:51.800 --> 00:07:54.590
and secrets,
appsettingsDevelopment is

166
00:07:54.650 --> 00:07:56.720
included in the code that I may be

167
00:07:56.780 --> 00:07:58.400
checking into source control that kind

168
00:07:58.460 --> 00:08:00.500
of thing right, yes. And user secrets

169
00:08:00.560 --> 00:08:02.810
that's somewhere else. That's kept

170
00:08:02.870 --> 00:08:04.880
somewhere else on disk, you shouldn't be

171
00:08:04.940 --> 00:08:06.970
checking it into source control, you

172
00:08:07.030 --> 00:08:08.450
don't want folks to be able to see your

173
00:08:08.510 --> 00:08:10.950
passwords and things
inside of source control.

174
00:08:11.060 --> 00:08:13.070
Okay. But in this case just to

175
00:08:13.130 --> 00:08:14.470
illustrate that this is in a different

176
00:08:14.530 --> 00:08:16.460
place I'm just changing the color of the

177
00:08:16.520 --> 00:08:19.310
navigation bar. Great ok.
So the next thing we

178
00:08:19.370 --> 00:08:20.390
already saw that it's loading the

179
00:08:20.450 --> 00:08:22.280
environment variables like my computer

180
00:08:22.340 --> 00:08:25.340
name there in the footer. I can access

181
00:08:25.400 --> 00:08:27.590
and send in environment variables to

182
00:08:27.650 --> 00:08:31.720
overwrite those different settings, so

183
00:08:31.780 --> 00:08:33.970
check this out I might have in my

184
00:08:34.030 --> 00:08:38.120
environment something that will setup

185
00:08:38.180 --> 00:08:40.070
environment variables like

186
00:08:40.130 --> 00:08:42.800
MyConfiguration_MenubarBgColor is

187
00:08:42.860 --> 00:08:45.880
yellow, MenubarColor is

188
00:08:45.940 --> 00:08:48.620
black and these
environment settings are

189
00:08:48.680 --> 00:08:51.070
things that our operations folks can set

190
00:08:51.130 --> 00:08:53.540
up on the server either by having some

191
00:08:53.600 --> 00:08:55.390
sort of a script file like this or maybe

192
00:08:55.450 --> 00:08:56.950
they set it up right in their windows

193
00:08:57.010 --> 00:09:00.050
configuration or in different service

194
00:09:00.110 --> 00:09:02.310
configurations in Linux as the

195
00:09:02.370 --> 00:09:05.480
webservice is starting up.
So I'm going to go

196
00:09:05.540 --> 00:09:09.230
back to my console window here

197
00:09:09.290 --> 00:09:12.170
and I'm going to run
this set environment

198
00:09:12.230 --> 00:09:14.950
command and it's got a couple extra

199
00:09:15.010 --> 00:09:16.630
spaces in there that it's not happy

200
00:09:16.690 --> 00:09:19.990
about, let me just copy these settings in

201
00:09:20.050 --> 00:09:23.470
there we go. Now notice that

202
00:09:23.530 --> 00:09:27.880
configuration setting
is hierarchical, so

203
00:09:27.940 --> 00:09:30.820
how do we define that hierarchy that

204
00:09:30.880 --> 00:09:33.620
we're setting my configuration and then

205
00:09:33.680 --> 00:09:36.580
these items inside of it, you separate

206
00:09:36.640 --> 00:09:38.810
them by using a double underscore

207
00:09:38.870 --> 00:09:42.690
between each one of the pieces of that

208
00:09:42.750 --> 00:09:45.050
configuration key we want to configure.

209
00:09:45.110 --> 00:09:49.010
So I will dotnet run again and this time

210
00:09:49.070 --> 00:09:50.930
with those environment variables in

211
00:09:50.990 --> 00:09:54.680
place I should see a yellow navigation

212
00:09:54.740 --> 00:09:57.410
bar with black text, because it's coming

213
00:09:57.470 --> 00:09:59.360
from my environment variable settings.

214
00:09:59.420 --> 00:10:01.760
Now this is also really powerful on

215
00:10:01.820 --> 00:10:04.250
Azure app service because we have that

216
00:10:04.310 --> 00:10:06.860
console on Azure where you see all the

217
00:10:06.920 --> 00:10:08.200
environment variables that are being

218
00:10:08.260 --> 00:10:10.370
configured specifically for my

219
00:10:10.430 --> 00:10:12.760
application and I can add-in in this

220
00:10:12.820 --> 00:10:15.620
case MyConfiguration_MenubarBgColor

221
00:10:15.680 --> 00:10:18.190
on Azure and set those settings

222
00:10:18.250 --> 00:10:21.170
appropriately. Now there's one

223
00:10:21.230 --> 00:10:23.240
final place I want to show you that you

224
00:10:23.300 --> 00:10:25.910
can add configuration
to override things.

225
00:10:25.970 --> 00:10:28.570
Environment variables is the last thing

226
00:10:28.630 --> 00:10:31.370
in the stack that's being configured

227
00:10:31.430 --> 00:10:36.680
inside of ASP.NET Core. IIS has their own

228
00:10:36.740 --> 00:10:38.720
configuration settings that they will

229
00:10:38.780 --> 00:10:41.600
load up from within web config when my

230
00:10:41.660 --> 00:10:45.320
application is running
inside of IIS. So the

231
00:10:45.380 --> 00:10:46.910
Internet Information Server on Windows

232
00:10:46.970 --> 00:10:49.550
uses something called the ASP.NET Core

233
00:10:49.610 --> 00:10:53.220
module and it has a web config
 looks like this

234
00:10:53.280 --> 00:10:56.970
when it runs my application. I can place

235
00:10:57.030 --> 00:11:01.290
inside of here an entry for
environmentVariables

236
00:11:01.350 --> 00:11:03.290
that are specific just to this

237
00:11:03.350 --> 00:11:05.100
process that we're hosting that's

238
00:11:05.160 --> 00:11:08.310
running our Kestrel web server for

239
00:11:08.370 --> 00:11:12.240
ASP.NET core. So I will add an
environmentVariable

240
00:11:12.300 --> 00:11:13.430
and I'm going to use those same

241
00:11:13.490 --> 00:11:19.700
names that I had before
MyConfiguration_MenubarBgColor

242
00:11:19.760 --> 00:11:22.290
and I'll specify the value of that

243
00:11:22.350 --> 00:11:24.680
environmentVariable, let's
make it skyblue,

244
00:11:24.740 --> 00:11:29.410
I'll create one more
environmentVariable,

245
00:11:29.470 --> 00:11:36.680
this is MyConfiguration_MenubarColor
and this time we're going to make

246
00:11:36.740 --> 00:11:43.230
that black, all right. So now if I restart

247
00:11:43.290 --> 00:11:47.290
over here inside of my console window

248
00:11:47.350 --> 00:11:49.640
and I'm going to browse back to my

249
00:11:49.700 --> 00:11:54.200
application, this time I still get the

250
00:11:54.260 --> 00:11:56.670
yellow and black. I get the yellow

251
00:11:56.730 --> 00:11:58.730
and black because I'm running inside of

252
00:11:58.790 --> 00:12:03.140
kestrel not inside of IIS. So let me go

253
00:12:03.200 --> 00:12:07.390
back one more time, I'm going to run this

254
00:12:07.450 --> 00:12:11.990
using IIS Express, so it
reads my web.config

255
00:12:12.050 --> 00:12:14.520
and parses these environmentVariables

256
00:12:14.580 --> 00:12:16.310
for the .Net process that

257
00:12:16.370 --> 00:12:21.780
it's hosting. So I'll launch the IIS Express
instance it's going to use my

258
00:12:21.840 --> 00:12:27.620
web.config that I
wrote, starting my browser

259
00:12:27.680 --> 00:12:32.570
and now I get the sky-blue with black. So

260
00:12:32.630 --> 00:12:33.760
I have written configuration

261
00:12:33.820 --> 00:12:36.310
specifically for the web server to use.

262
00:12:36.370 --> 00:12:39.740
It's being parsed and added in, that

263
00:12:39.800 --> 00:12:41.510
gives you a level of configuration if

264
00:12:41.570 --> 00:12:44.160
you want to do something specific to

265
00:12:44.220 --> 00:12:47.300
IIS only for this process because you

266
00:12:47.360 --> 00:12:49.170
don't want to share
those environment variables

267
00:12:49.280 --> 00:12:50.990
with other processes perhaps

268
00:12:51.050 --> 00:12:53.540
in a shared hosting environment, right.

269
00:12:53.600 --> 00:12:56.910
But we have all these different options

270
00:12:56.970 --> 00:12:58.470
we can work with.

271
00:12:58.530 --> 00:13:02.760
Okay. So to recap we set configuration

272
00:13:02.820 --> 00:13:05.310
for our application from half-dozen

273
00:13:05.370 --> 00:13:06.840
different places where there was

274
00:13:06.900 --> 00:13:09.240
appsettings.json, appsettings with the

275
00:13:09.300 --> 00:13:11.760
environmentname.json in this case

276
00:13:11.820 --> 00:13:13.530
development, but I could also write an

277
00:13:13.590 --> 00:13:15.660
appsetting.staging if I have

278
00:13:15.720 --> 00:13:17.460
configuration information that's

279
00:13:17.520 --> 00:13:19.710
specific to my staging environment that

280
00:13:19.770 --> 00:13:21.240
I want my testers to be able to work

281
00:13:21.300 --> 00:13:23.310
with. I can also have app settings

282
00:13:23.370 --> 00:13:25.770
production.json that my DevOps folks

283
00:13:25.830 --> 00:13:27.690
manage in the upper in the production

284
00:13:27.750 --> 00:13:29.370
space. I can set environment

285
00:13:29.430 --> 00:13:32.070
variables, I can use user secrets to hide

286
00:13:32.130 --> 00:13:34.590
things on just the development machine

287
00:13:34.650 --> 00:13:36.660
and those environmentVariables can be

288
00:13:36.720 --> 00:13:38.790
set specifically for the web server in

289
00:13:38.850 --> 00:13:41.280
the web server process. It's a lot of

290
00:13:41.340 --> 00:13:43.410
flexibility and a lot of options, I've

291
00:13:43.470 --> 00:13:46.140
accessed my configuration on my page

292
00:13:46.200 --> 00:13:49.560
both with an indexer by saying computer

293
00:13:49.620 --> 00:13:52.110
name inside of the configuration object

294
00:13:52.170 --> 00:13:54.150
and but also by creating that my

295
00:13:54.210 --> 00:13:57.210
configuration strongly
typed class that

296
00:13:57.270 --> 00:13:59.310
had properties defined for those things

297
00:13:59.370 --> 00:14:02.940
inside of it, pretty cool stuff.
You know some things

298
00:14:03.000 --> 00:14:04.200
that you showed that I think are really

299
00:14:04.260 --> 00:14:06.150
worthwhile, one is I've got a lot of

300
00:14:06.210 --> 00:14:08.460
flexibility so as I'm developing I can

301
00:14:08.520 --> 00:14:10.050
say this is how I want to work in

302
00:14:10.110 --> 00:14:11.670
production, this is how I want to work

303
00:14:11.730 --> 00:14:13.950
locally and all that. Another thing is it

304
00:14:14.010 --> 00:14:16.320
makes it a lot easier to be secure

305
00:14:16.380 --> 00:14:19.770
and not accidentally
checking my, you know

306
00:14:19.830 --> 00:14:21.930
passwords and secrets into source

307
00:14:21.990 --> 00:14:24.540
control because of things like I can put

308
00:14:24.600 --> 00:14:26.610
locally when I develop, I can put those

309
00:14:26.670 --> 00:14:28.860
in my user secrets and in production say

310
00:14:28.920 --> 00:14:30.390
on Azure I can create those as

311
00:14:30.450 --> 00:14:32.010
environment settings, environment

312
00:14:32.070 --> 00:14:33.930
variables or I can create those you know

313
00:14:33.990 --> 00:14:35.730
and whatever my server is set those up

314
00:14:35.790 --> 00:14:37.620
as environmentVariables it's a much

315
00:14:37.680 --> 00:14:40.170
better you know it kind of pushes you

316
00:14:40.230 --> 00:14:41.790
away from putting those things you don't

317
00:14:41.850 --> 00:14:43.710
want to accidentally share makes it

318
00:14:43.770 --> 00:14:45.660
easier for you to keep them locally in

319
00:14:45.720 --> 00:14:47.190
your environment and in your production

320
00:14:47.250 --> 00:14:49.260
environments as well. It's very

321
00:14:49.320 --> 00:14:51.630
flexible, very powerful you can use those

322
00:14:51.690 --> 00:14:53.130
same things when you start using other

323
00:14:53.190 --> 00:14:55.800
tools like Docker Containers, we can

324
00:14:55.860 --> 00:14:57.540
inject our environmentVariables that

325
00:14:57.600 --> 00:15:01.530
way as well,Great,  cool stuff.
Thanks for joining us

326
00:15:01.590 --> 00:15:02.790
hope you'll stick around for some more

327
00:15:02.850 --> 00:15:06.170
videos on ASP.NET Core.

